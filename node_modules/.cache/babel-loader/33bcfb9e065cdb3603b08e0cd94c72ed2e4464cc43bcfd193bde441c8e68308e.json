{"ast":null,"code":"var _jsxFileName = \"/home/rishi/Desktop/Websites/portfolio/src/Home/TypingAnimation.js\",\n  _s = $RefreshSig$();\n// src/components/TypingAnimation.js\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = ({\n  text,\n  speed = 100\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  useEffect(() => {\n    let index = 0;\n\n    // Function to handle the typing animation\n    const typeText = () => {\n      setDisplayText(prev => {\n        if (index < text.length) {\n          const newText = prev + text[index];\n          index += 1;\n          return newText;\n        } else {\n          return prev; // When done typing, keep the text unchanged\n        }\n      });\n    };\n\n    // Start typing\n    const interval = setInterval(typeText, speed);\n\n    // Cleanup function to clear the interval\n    return () => clearInterval(interval);\n  }, [text, speed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n_s(TypingAnimation, \"Z72AqRalvcuvuUyHd5OLwsN/cpk=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypingAnimation","text","speed","_s","displayText","setDisplayText","index","typeText","prev","length","newText","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rishi/Desktop/Websites/portfolio/src/Home/TypingAnimation.js"],"sourcesContent":["// src/components/TypingAnimation.js\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\n\nconst TypingAnimation = ({ text, speed = 100 }) => {\n  const [displayText, setDisplayText] = useState('');\n\n  useEffect(() => {\n    let index = 0;\n    \n    // Function to handle the typing animation\n    const typeText = () => {\n      setDisplayText((prev) => {\n        if (index < text.length) {\n          const newText = prev + text[index];\n          index += 1;\n          return newText;\n        } else {\n          return prev; // When done typing, keep the text unchanged\n        }\n      });\n    };\n\n    // Start typing\n    const interval = setInterval(typeText, speed);\n\n    // Cleanup function to clear the interval\n    return () => clearInterval(interval);\n  }, [text, speed]);\n\n  return <div>{displayText}</div>;\n};\n\nexport default TypingAnimation;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,eAAe,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,GAAG,CAAC;;IAEb;IACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrBF,cAAc,CAAEG,IAAI,IAAK;QACvB,IAAIF,KAAK,GAAGL,IAAI,CAACQ,MAAM,EAAE;UACvB,MAAMC,OAAO,GAAGF,IAAI,GAAGP,IAAI,CAACK,KAAK,CAAC;UAClCA,KAAK,IAAI,CAAC;UACV,OAAOI,OAAO;QAChB,CAAC,MAAM;UACL,OAAOF,IAAI,CAAC,CAAC;QACf;MACF,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,MAAMG,QAAQ,GAAGC,WAAW,CAACL,QAAQ,EAAEL,KAAK,CAAC;;IAE7C;IACA,OAAO,MAAMW,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACV,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB,oBAAOH,OAAA;IAAAe,QAAA,EAAMV;EAAW;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjC,CAAC;AAACf,EAAA,CA3BIH,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AA6BrB,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}